version: 0.2

env:
  variables:
    FRAMEWORK_VERSION: "1.3.0"
    ACCOUNT: "142577830533"
    AWS_DEFAULT_REGION: "us-west-2"
    ECR_REPO: "sagemaker-framework-pull-request-integ"
    PREPROD_IMAGE: "142577830533.dkr.ecr.us-west-2.amazonaws.com/sagemaker-framework-pull-request-integ"
    CPU_FRAMEWORK_BINARY: "https://files.pythonhosted.org/packages/71/64/49c5125befd5e0f0e17f115d55cb78080adacbead9d19f253afd0157656a/mxnet-1.3.0.post0-py2.py3-none-manylinux1_x86_64.whl"
    CPU_PY_VERSION: "2"
    CPU_INSTANCE_TYPE: "ml.c4.xlarge"


phases:
  pre_build:
    commands:
      - start-dockerd


  build:
    commands:
      # install
      - pip3 install -U .[test]

      # run unit tests
      - pytest test/unit

      # build cpu image
      - |
        build_dir="docker/$FRAMEWORK_VERSION/final"
        cpu_dockerfile="Dockerfile.cpu"

        # Download framework binary
        cpu_fw_binary=$(basename $CPU_FRAMEWORK_BINARY)
        wget -O $build_dir/$cpu_fw_binary $CPU_FRAMEWORK_BINARY

        # Create tensorflow-container pip archive
        python3 setup.py sdist
        # tar_name will be something like: sagemaker_mxnet_container-1.0.tar.gz
        tar_name=$(ls dist)
        cp dist/$tar_name $build_dir

        build_id="$(echo $CODEBUILD_BUILD_ID | sed -e 's/:/-/g')"
        CPU_TAG="$FRAMEWORK_VERSION-cpu-py$CPU_PY_VERSION-$build_id"

        cd $build_dir
        docker build -f $cpu_dockerfile --build-arg py_version=$CPU_PY_VERSION --build-arg framework_installable=$cpu_fw_binary -t $PREPROD_IMAGE:$CPU_TAG .
        cd ../../../

      # run integration tests
      - |
        if has-matching-changes "test/" "tests/" "src/*.py" "docker/*"; then
          pytest test/integration/local --docker-base-name $PREPROD_IMAGE --tag $CPU_TAG --framework-version $FRAMEWORK_VERSION --py-version $CPU_PY_VERSION --processor cpu
        else
          echo "skipping integration tests"
        fi

      # push image to ecr
      - |
        $(aws ecr get-login --registry-ids $ACCOUNT --no-include-email --region $AWS_DEFAULT_REGION)
        docker push $PREPROD_IMAGE:$CPU_TAG

      # run sagemaker tests
      - |
        if has-matching-changes "test/" "tests/" "src/*.py" "docker/*"; then
          pytest test/integration/sagemaker --docker-base-name $ECR_REPO --aws-id $ACCOUNT --tag $CPU_TAG --instance-type $CPU_INSTANCE_TYPE
        else
          echo "skipping sagemaker tests"
        fi

    finally:
      # remove ecr image
      - aws ecr batch-delete-image --repository-name $ECR_REPO --region $AWS_DEFAULT_REGION --image-ids imageTag=$CPU_TAG